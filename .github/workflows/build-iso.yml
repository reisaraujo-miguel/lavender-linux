---
name: Build Release ISO

on:
  push:
    tags:
      - "v*"
    paths:
      - "./disk_config/iso.toml"
      - "./disk_config/disk.toml"
      - "./.github/workflows/build-iso.yml"
  workflow_dispatch:

env:
  DEFAULT_TAG: "latest"
  IMAGE_NAME: ${{ github.event.repository.name }} # output of build.yml, keep in sync
  IMAGE_REGISTRY: "ghcr.io/${{ github.repository_owner }}" # do not edit
  BIB_IMAGE: "ghcr.io/lorbuschris/bootc-image-builder:20250608" # "quay.io/centos-bootc/bootc-image-builder:latest" - see https://github.com/osbuild/bootc-image-builder/pull/954

jobs:
  build-image:
    uses: ./.github/workflows/build-image-main.yml
    secrets:
      SIGNING_SECRET: ${{ secrets.SIGNING_SECRET }}
    permissions:
      contents: read
      packages: write
      actions: read
      id-token: write

  build-iso:
    name: Build ISOs
    needs: build-image
    runs-on: ${{ inputs.platform == 'amd64' && 'ubuntu-24.04' || 'ubuntu-24.04-arm' }}
    strategy:
      fail-fast: false
      matrix:
        disk-type: ["qcow2", "anaconda-iso"]
    permissions:
      contents: read
      packages: read
      id-token: write

    steps:
      - name: Prepare environment
        run: |
          USER_UID=$(id -u)
          USER_GID=$(id -g)
          # Concatenate the types with a hyphen
          DISK_TYPE=$(echo "${{ matrix.disk-type }}" | tr ' ' '-')
          # Lowercase the image uri
          echo "IMAGE_REGISTRY=${IMAGE_REGISTRY,,}" >> ${GITHUB_ENV}
          echo "IMAGE_NAME=${IMAGE_NAME,,}" >> ${GITHUB_ENV}
          echo "DISK_TYPE=${DISK_TYPE}" >> ${GITHUB_ENV}
          echo "USER_UID=${USER_UID}" >> ${GITHUB_ENV}
          echo "USER_GID=${USER_GID}" >> ${GITHUB_ENV}

      - name: Install dependencies
        if: inputs.platform == 'arm64'
        run: |
          set -x
          sudo apt update -y
          sudo apt install -y \
            podman

      - name: Maximize build space
        if: inputs.platform != 'arm64'
        uses: ublue-os/remove-unwanted-software@cc0becac701cf642c8f0a6613bbdaf5dc36b259e # v9
        with:
          remove-codeql: true

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          fetch-depth: 0

      - name: Get Release Version
        id: get_version
        run: |
          echo "release_ver=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Build disk images
        id: build
        uses: osbuild/bootc-image-builder-action@main
        with:
          builder-image: ${{ env.BIB_IMAGE }}
          config-file: ${{ matrix.disk-type == 'anaconda-iso' && './disk_config/iso.toml' || './disk_config/disk.toml' }}
          image: ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.DEFAULT_TAG }}
          chown: ${{ env.USER_UID }}:${{ env.USER_GID }}
          types: ${{ matrix.disk-type }}
          additional-args: --use-librepo=True

      - name: Upload ISOs and Checksum to Job Artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          path: ${{ steps.build.outputs.output-directory }}
          if-no-files-found: error
          retention-days: 0
          compression-level: 0
          overwrite: true

      - name: Get Artifact URL
        id: get_iso_artifact
        run: |
          iso_url="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"

          echo "iso_url=$iso_url" >> $GITHUB_ENV

      - name: Generate Changelog
        run: |
          git_chglog="github.com/git-chglog/git-chglog/cmd/git-chglog@v0.15.4"

          go run $git_chglog -o changelog.md --silent ${{ env.release_ver }}

          echo "CHANGELOG<<EOF" >> $GITHUB_ENV
          echo "$(cat changelog.md)" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create Release
        uses: softprops/action-gh-release@c95fe1489396fe8a9eb87c0abf8aa5b2ef267fda
        if: github.event_name != 'workflow_dispatch'
        with:
          tag_name: ${{ env.release_ver }}
          name: Lavender ${{ env.release_ver }}
          body: |
            ${{ env.CHANGELOG }}

            ---

            Lavender Linux ${{ env.release_ver }} (Based on Fedora ${{ env.VERSION }})

            The ISO file is available as a GitHub Actions artifact due to file size limitations.

            [Download ${{ steps.build.outputs.iso_name }}](${{ env.iso_url }})

            Note: You need to be logged in to GitHub to download the artifact.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
