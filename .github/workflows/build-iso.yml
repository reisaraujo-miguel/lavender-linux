---
name: Build Release ISO

on:
  push:
    tags:
      - "v*"
    paths:
      - "./iso.toml"
      - "./.github/workflows/build-iso.yml"
      - "./Justfile"
  workflow_dispatch:

env:
  IMAGE_REGISTRY: "ghcr.io/${{ github.repository }}"
  DEFAULT_TAG: "latest"

jobs:
  build-image:
    uses: ./.github/workflows/build-image-main.yml
    secrets:
      SIGNING_SECRET: ${{ secrets.SIGNING_SECRET }}
    permissions:
      contents: write
      packages: write
      actions: read
      id-token: write

  build-iso:
    name: Build ISOs
    needs: build-image
    runs-on: ubuntu-24.04
    permissions:
      contents: write
      packages: write
      id-token: write

    steps:
      - name: lower case the image registry in case of any capitalization
        run: |
          echo "IMAGE_REGISTRY=${IMAGE_REGISTRY,,}" >> ${GITHUB_ENV}

      - name: Maximize build space
        uses: ublue-os/remove-unwanted-software@cc0becac701cf642c8f0a6613bbdaf5dc36b259e # v9
        with:
          remove-codeql: true

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          fetch-depth: 0

      - name: Get Release Version
        id: get_version
        run: |
          echo "release_ver=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Setup Just
        uses: extractions/setup-just@e33e0265a09d6d736e2ee1e0eb685ef1de4669ff # v3

      - name: Build ISO
        uses: ublue-os/bootc-image-builder-action@main
        id: build
        with:
          bootc-image-builder-image: ghcr.io/centos-workstation/bootc-image-builder:latest
          use-librepo: true
          config-file: ./iso.toml
          image: ${{ env.IMAGE_REGISTRY }}:${{ env.DEFAULT_TAG }}

      - name: Upload ISOs and Checksum to Job Artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          path: ${{ steps.build.outputs.output-directory }}
          if-no-files-found: error
          retention-days: 0
          compression-level: 0
          overwrite: true

      - name: Get Artifact URL
        id: get_iso_artifact
        run: |
          iso_url="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"

          echo "iso_url=$iso_url" >> $GITHUB_ENV

      - name: Generate Changelog
        run: |
          git_chglog="github.com/git-chglog/git-chglog/cmd/git-chglog@v0.15.4"

          go run $git_chglog -o changelog.md --silent ${{ env.release_ver }}

          echo "CHANGELOG<<EOF" >> $GITHUB_ENV
          echo "$(cat changelog.md)" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create Release
        uses: softprops/action-gh-release@da05d552573ad5aba039eaac05058a918a7bf631
        if: github.event_name != 'workflow_dispatch'
        with:
          tag_name: ${{ env.release_ver }}
          name: Lavender ${{ env.release_ver }}
          body: |
            ${{ env.CHANGELOG }}

            ---

            Felux ${{ env.release_ver }} (Based on Fedora ${{ env.VERSION }})

            The ISO file is available as a GitHub Actions artifact due to file size limitations.

            [Download ${{ steps.build.outputs.iso_name }}](${{ env.iso_url }})

            Note: You need to be logged in to GitHub to download the artifact.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
